name: CD_job

on:
  push:
    branches:
      - main

env:
  PROD_HOSTNAME: ${{ secrets.PROD_HOSTNAME  }}
  PROD_USER_NAME: ${{ secrets.PROD_USER_NAME  }}
  PROD_PASSWORD: ${{ secrets.PROD_PASSWORD  }}
  PROD_DB_NAME: ${{ secrets.PROD_DB_NAME  }}
  PROD_SCHEMA: ${{ secrets.PROD_SCHEMA  }}
  PYTHON_VERSION: "3.9"
  DBT_DEFAULT_TARGET: prod

jobs:
  deploy:
    name: deploy
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_PAT }}

      - name: Configure Git Authentication
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions CI"
          git remote set-url origin "https://${{ secrets.GH_PAT }}@github.com/${{ github.repository }}.git"
          git fetch --all
          git checkout main
          git pull origin main

      - name: Debug Git Remote
        run: git remote -v

      - name: Install Python Dependencies
        run: pip install -r requirements.txt

      - name: Install dbt dependencies
        run: dbt deps

      - name: Debug dbt connection
        run: dbt debug

      - name: dbt build
        run: dbt build -s state:modified+ --state target-defer --defer --fail-fast

  upload_manifest:
    name: Upload Manifest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_PAT }}

      - name: Configure Git Authentication
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions CI"
          git remote set-url origin "https://${{ secrets.GH_PAT }}@github.com/${{ github.repository }}.git"
          git fetch --all
          git checkout main
          git pull origin main

      - name: Debug Git Remote
        run: git remote -v

      - name: Install Python Dependencies
        run: pip install -r requirements.txt

      - name: Install dbt dependencies
        run: dbt deps

      - name: Parse dbt project for Production
        run: dbt parse --target prod
        env:
          DBT_PROFILES_DIR: ./

      - name: Generate catalog.json
        run: dbt-coves generate docs

      - name: Prepare Artifacts Files
        run: |
          mkdir -p target-defer
          if [ -f target/manifest.json ]; then
            mv target/manifest.json target-defer/manifest.json
            mv target/catalog.json target-defer/catalog.json
            echo "Artifacts prepared in target-defer/"
          else
            echo "manifest.json or catalog.json not found after dbt parse/dbt docs generate. Cannot proceed with upload."
            exit 1
          fi

      - name: Commit Artifacts
        run: |
          git add target-defer/manifest.json target-defer/catalog.json
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "[skip ci] Upload artifacts to branch main"
          fi

      - name: Push Artifacts
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GH_PAT }}
          force: true

  upload_docker_image:
    name: upload dbt docker image
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: upload_manifest

    steps:
      - name: install az CLI and authenticate
        run: |
          - apk add --no-cache python3 py3-pip
          - curl -L https://aka.ms/InstallAzureCli | bash
          - az login --service-principal --username ${{ secrets.APP_ID }} --password ${{ secrets.CLIENT_SECRET }} --tenant ${{ secrets.TENANT_ID }}

      - name: Login to Azure Container Registry
        run: |
          az acr login --name ${{ secrets.AZURE_ACR_NAME }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.AZURE_ACR_NAME }}.azurecr.io/dbt-project:latest .

      - name: Push Docker image
        run: |
          docker push ${{ secrets.AZURE_ACR_NAME }}.azurecr.io/dbt-project:latest
